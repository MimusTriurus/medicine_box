---
services:
  init-dhparams:
    image: docker.io/certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'test -f /etc/letsencrypt/ssl-dhparams.pem || openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 4096'
    volumes:
      - cert_volume:/etc/letsencrypt:Z
  certbot-oneshot:
    image: docker.io/certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'test -d /etc/letsencrypt/live/medicine-box-bot.ru || certbot certonly --standalone --register-unsafely-without-email -d "medicine-box-bot.ru" --rsa-key-size 2048 --agree-tos --force-renewal'
    ports:
      - 80:80
    volumes:
      - cert_volume:/etc/letsencrypt:Z
  nginx:
    image: docker.io/library/nginx
    entrypoint: /bin/sh
    command: -c 'while :; do sleep 6h && wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'
    configs:
      - source: nginx-defaultserver
        target: /etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 443:443
    depends_on:
      init-dhparams:
        condition: service_completed_successfully
        required: true
      certbot-oneshot:
        condition: service_completed_successfully
        required: true
    volumes:
      - cert_volume:/etc/letsencrypt:Z
      - acme_challenge:/usr/share/nginx/html/.well-known:Z
  certbot:
    image: docker.io/certbot/certbot
    entrypoint: /bin/sh
    command: -c 'trap exit TERM; while :; do certbot renew; sleep 24h && wait $${!}; done;'
    depends_on:
      nginx:
        condition: service_started
        required: true
    volumes:
      - cert_volume:/etc/letsencrypt:Z
      - acme_challenge:/usr/share/nginx/html/.well-known:Z

  bot:
    container_name: bot
    build: .
    volumes:
      - ./bot/logs/:/app/bot/logs
    environment:
      WEBAPP_PORT: 8000
    env_file:
      - ./vault.env
    ports:
      - "8000:8000"

volumes:
  cert_volume: {}
  acme_challenge: {}

configs:
  nginx-defaultserver:
    content: |
      upstream back {
        server bot:8000;
      }

      server {
        server_name _ default_server;
        listen       443 ssl http2;

        ssl_certificate     /etc/letsencrypt/live/medicine-box-bot.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/medicine-box-bot.ru/privkey.pem;

        location / {
          proxy_pass http://back;
        }
      }

      server {
        listen 80;

        server_name _ default_server;
        charset utf-8;

        # max upload size
        client_max_body_size 10M;

        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
          root /usr/share/nginx/html;
          try_files $uri $uri/ /index.html =502;
        }

        error_page 500 502 503 504 /502.html;
        location = /502.html {
          root /usr/share/nginx/html;
          internal;
        }

      }